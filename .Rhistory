ggplot(mpg_data, aes(x = as.factor(Cylinders), y = Avg_Highway_mpg, fill = as.factor(Cylinders))) +
geom_bar(stat = "identity") +
labs(title = "Average City MPG by Cylinder Type",
x = "Number of Cylinders",
y = "Average City MPG") +
scale_fill_discrete(name = "Cylinders") +
theme_minimal()
# Extract the number of cylinders in a case-insensitive manner
car_data <- car_data %>%
mutate(Cylinders = str_extract(`Engine.Information.Engine.Type`, "\\d+\\s*[Cc]ylinder")) %>%
# Remove any remaining spaces and convert to numeric
mutate(Cylinders = as.numeric(str_extract(Cylinders, "\\d+")))
# Calculate average City and Highway mpg by cylinder type
mpg_data <- car_data %>%
group_by(Cylinders) %>%
summarize(
Avg_City_mpg = mean(`Fuel.Information.City.mpg`, na.rm = TRUE),
Avg_Highway_mpg = mean(`Fuel.Information.Highway.mpg`, na.rm = TRUE)
)
# Create a bar plot of average City mpg by cylinder type
ggplot(mpg_data, aes(x = as.factor(Cylinders), y = Avg_Highway_mpg, fill = as.factor(Cylinders))) +
geom_bar(stat = "identity") +
labs(title = "Average Highway MPG by Cylinder Type",
x = "Number of Cylinders",
y = "Average Highway MPG") +
scale_fill_discrete(name = "Cylinders") +
theme_minimal()
# Extract the number of cylinders in a case-insensitive manner
car_data <- car_data %>%
mutate(Cylinders = str_extract(`Engine.Information.Engine.Type`, "\\d+\\s*[Cc]ylinder[s]")) %>%
# Remove any remaining spaces and convert to numeric
mutate(Cylinders = as.numeric(str_extract(Cylinders, "\\d+")))
# Calculate average City and Highway mpg by cylinder type
mpg_data <- car_data %>%
group_by(Cylinders) %>%
summarize(
Avg_City_mpg = mean(`Fuel.Information.City.mpg`, na.rm = TRUE),
Avg_Highway_mpg = mean(`Fuel.Information.Highway.mpg`, na.rm = TRUE)
)
# Create a bar plot of average City mpg by cylinder type
ggplot(mpg_data, aes(x = as.factor(Cylinders), y = Avg_Highway_mpg, fill = as.factor(Cylinders))) +
geom_bar(stat = "identity") +
labs(title = "Average Highway MPG by Cylinder Type",
x = "Number of Cylinders",
y = "Average Highway MPG") +
scale_fill_discrete(name = "Cylinders") +
theme_minimal()
# Extract the number of cylinders in a case-insensitive manner
car_data <- car_data %>%
mutate(Cylinders = str_extract(`Engine.Information.Engine.Type`, "\\d+\\s*[Cc]ylinders?")) %>%
# Remove any remaining spaces and convert to numeric
mutate(Cylinders = as.numeric(str_extract(Cylinders, "\\d+")))
# Calculate average City and Highway mpg by cylinder type
mpg_data <- car_data %>%
group_by(Cylinders) %>%
summarize(
Avg_City_mpg = mean(`Fuel.Information.City.mpg`, na.rm = TRUE),
Avg_Highway_mpg = mean(`Fuel.Information.Highway.mpg`, na.rm = TRUE)
)
# Create a bar plot of average City mpg by cylinder type
ggplot(mpg_data, aes(x = as.factor(Cylinders), y = Avg_Highway_mpg, fill = as.factor(Cylinders))) +
geom_bar(stat = "identity") +
labs(title = "Average Highway MPG by Cylinder Type",
x = "Number of Cylinders",
y = "Average Highway MPG") +
scale_fill_discrete(name = "Cylinders") +
theme_minimal()
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(stringr)
# Extract the number of cylinders in a case-insensitive manner
car_data <- car_data %>%
mutate(Cylinders = str_extract(`Engine.Information.Engine.Type`, "\\d+\\s*[Cc]ylinders?")) %>%
# Remove any remaining spaces and convert to numeric
mutate(Cylinders = as.numeric(str_extract(Cylinders, "\\d+")))
# Calculate average City and Highway mpg by cylinder type
mpg_data <- car_data %>%
group_by(Cylinders) %>%
summarize(
Avg_City_mpg = mean(`Fuel.Information.City.mpg`, na.rm = TRUE),
Avg_Highway_mpg = mean(`Fuel.Information.Highway.mpg`, na.rm = TRUE)
)
# Create a bar plot of average City mpg by cylinder type
ggplot(mpg_data, aes(x = as.factor(Cylinders), y = Avg_City_mpg, fill = as.factor(Cylinders))) +
geom_bar(stat = "identity") +
labs(title = "Average City MPG by Cylinder Type",
x = "Number of Cylinders",
y = "Average City MPG") +
scale_fill_discrete(name = "Cylinders") +
theme_minimal()
# Extract the number of cylinders in a case-insensitive manner
car_data <- car_data %>%
mutate(Cylinders = str_extract(`Engine.Information.Engine.Type`, "\\d+\\s*[Cc]ylinders?")) %>%
# Remove any remaining spaces and convert to numeric
mutate(Cylinders = as.numeric(str_extract(Cylinders, "\\d+")))
# Calculate average City and Highway mpg by cylinder type
mpg_data <- car_data %>%
group_by(Cylinders) %>%
summarize(
Avg_City_mpg = mean(`Fuel.Information.City.mpg`, na.rm = TRUE),
Avg_Highway_mpg = mean(`Fuel.Information.Highway.mpg`, na.rm = TRUE)
)
# Create a bar plot of average City mpg by cylinder type
ggplot(mpg_data, aes(x = as.factor(Cylinders), y = Avg_Highway_mpg, fill = as.factor(Cylinders))) +
geom_bar(stat = "identity") +
labs(title = "Average Highway MPG by Cylinder Type",
x = "Number of Cylinders",
y = "Average Highway MPG") +
scale_fill_discrete(name = "Cylinders") +
theme_minimal()
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(stringr)
# Extract the number of cylinders, accounting for "cylinder" and "cylinders" (case-insensitive)
car_data <- car_data %>%
mutate(Cylinders = str_extract(`Engine Information.Engine Type`, "\\d+\\s*[Cc]ylinders?")) %>%
# Remove any remaining spaces and convert to numeric
mutate(Cylinders = as.numeric(str_extract(Cylinders, "\\d+")))
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(stringr)
# Extract the number of cylinders, accounting for "cylinder" and "cylinders" (case-insensitive)
car_data <- car_data %>%
mutate(Cylinders = str_extract(`Engine.Information.Engine.Type`, "\\d+\\s*[Cc]ylinders?")) %>%
# Remove any remaining spaces and convert to numeric
mutate(Cylinders = as.numeric(str_extract(Cylinders, "\\d+")))
# Calculate average City and Highway mpg by cylinder type
mpg_data <- car_data %>%
group_by(Cylinders) %>%
summarize(
Avg_City_mpg = mean(`Fuel.Information.City.mpg`, na.rm = TRUE),
Avg_Highway_mpg = mean(`Fuel.Information.Highway.mpg`, na.rm = TRUE)
)
# Create a bar plot of average City mpg by cylinder type
ggplot(mpg_data, aes(x = as.factor(Cylinders), y = Avg_City_mpg, fill = as.factor(Cylinders))) +
geom_bar(stat = "identity") +
labs(title = "Average City MPG by Cylinder Type",
x = "Number of Cylinders",
y = "Average City MPG") +
scale_fill_discrete(name = "Cylinders") +
theme_minimal()
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(stringr)
# Load the data
car_data <- read.csv("cars.csv")
# Extract the number of cylinders from the "Engine Information.Engine Type" column
car_data <- car_data %>%
mutate(
Cylinders = gsub("(?i)\\s*cylinders?", "", Engine.Information.Engine.Type, perl = TRUE), # Remove "cylinder" or "cylinders" (case-insensitive)
Cylinders = gsub(".*\\s", "", Cylinders) # Keep only the numeric part (e.g., 6 from "Audi 3.2L 6 cylinder")
)
# Convert "Cylinders" to a numeric variable, handling invalid entries
car_data$Cylinders <- as.numeric(car_data$Cylinders)
# Remove rows with NA in "Cylinders" or MPG columns
cleaned_data <- car_data %>%
filter(!is.na(Cylinders) & !is.na(Fuel.Information.City.mpg))
# Create the bar graph for city MPG
ggplot(cleaned_data, aes(x = as.factor(Cylinders), y = Fuel.Information.City.mpg, fill = as.factor(Cylinders))) +
stat_summary(fun = "mean", geom = "bar", position = "dodge") +
labs(
title = "City MPG by Number of Cylinders",
x = "Number of Cylinders",
y = "City MPG",
fill = "Cylinders"
) +
theme_minimal()
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(stringr)
# Load the data
car_data <- read.csv("cars.csv")
# Extract the number of cylinders from the "Engine Information.Engine Type" column
car_data <- car_data %>%
mutate(
Cylinders = gsub("(?i)\\s*cylinders?", "", Engine.Information.Engine.Type, perl = TRUE), # Remove "cylinder" or "cylinders" (case-insensitive)
Cylinders = gsub(".*\\s", "", Cylinders) # Keep only the numeric part (e.g., 6 from "Audi 3.2L 6 cylinder")
)
# Convert "Cylinders" to a numeric variable, handling invalid entries
car_data$Cylinders <- as.numeric(car_data$Cylinders)
# Remove rows with NA in "Cylinders" or MPG columns
cleaned_data <- car_data %>%
filter(!is.na(Cylinders) & !is.na(Fuel.Information.City.mpg))
# Create the bar graph for city MPG
ggplot(cleaned_data, aes(x = as.factor(Cylinders), y = Fuel.Information.City.mpg, fill = as.factor(Cylinders))) +
stat_summary(fun = "mean", geom = "bar", position = "dodge") +
labs(
title = "City MPG by Number of Cylinders",
x = "Number of Cylinders",
y = "City MPG",
fill = "Cylinders"
) +
theme_minimal()
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(stringr)
# Extract the number of cylinders, accounting for "cylinder" and "cylinders" (case-insensitive)
car_data <- car_data %>%
mutate(Cylinders = str_extract(`Engine.Information.Engine.Type`, "\\d+\\s*[Cc]ylinders?")) %>%
# Remove any remaining spaces and convert to numeric
mutate(Cylinders = as.numeric(str_extract(Cylinders, "\\d+")))
# Calculate average City and Highway mpg by cylinder type
mpg_data <- car_data %>%
group_by(Cylinders) %>%
summarize(
Avg_City_mpg = mean(`Fuel.Information.City.mpg`, na.rm = TRUE),
Avg_Highway_mpg = mean(`Fuel.Information.Highway mpg`, na.rm = TRUE)
)
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(stringr)
# Extract the number of cylinders, accounting for "cylinder" and "cylinders" (case-insensitive)
car_data <- car_data %>%
mutate(Cylinders = str_extract(`Engine.Information.Engine.Type`, "\\d+\\s*[Cc]ylinders?")) %>%
# Remove any remaining spaces and convert to numeric
mutate(Cylinders = as.numeric(str_extract(Cylinders, "\\d+")))
# Calculate average City and Highway mpg by cylinder type
mpg_data <- car_data %>%
group_by(Cylinders) %>%
summarize(
Avg_City_mpg = mean(`Fuel.Information.City.mpg`, na.rm = TRUE),
Avg_Highway_mpg = mean(`Fuel.Information.Highway.mpg`, na.rm = TRUE)
)
# Create a bar plot of average City mpg by cylinder type
ggplot(mpg_data, aes(x = as.factor(Cylinders), y = Avg_City_mpg, fill = as.factor(Cylinders))) +
geom_bar(stat = "identity") +
labs(title = "Average City MPG by Cylinder Type",
x = "Number of Cylinders",
y = "Average City MPG") +
scale_fill_discrete(name = "Cylinders") +
theme_minimal()
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(stringr)
# Load the data
car_data <- read.csv("cars.csv")
# Extract the number of cylinders from the "Engine Information.Engine Type" column
car_data <- car_data %>%
mutate(
Cylinders = gsub("(?i)\\s*cylinders?", "", Engine.Information.Engine.Type, perl = TRUE), # Remove "cylinder" or "cylinders" (case-insensitive)
Cylinders = gsub(".*\\s", "", Cylinders) # Keep only the numeric part (e.g., 6 from "Audi 3.2L 6 cylinder")
)
# Convert "Cylinders" to a numeric variable, handling invalid entries
car_data$Cylinders <- as.numeric(car_data$Cylinders)
# Remove rows with NA in "Cylinders" or MPG columns
cleaned_data <- car_data %>%
filter(!is.na(Cylinders) & !is.na(Fuel.Information.City.mpg))
# Create the bar graph for city MPG
ggplot(cleaned_data, aes(x = as.factor(Cylinders), y = Fuel.Information.City.mpg, fill = as.factor(Cylinders))) +
stat_summary(fun = "mean", geom = "bar", position = "dodge") +
labs(
title = "City MPG by Number of Cylinders",
x = "Number of Cylinders",
y = "City MPG",
fill = "Cylinders"
) +
theme_minimal()
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(stringr)
# Load the data
car_data <- read.csv("cars.csv")
# Clean and extract the number of cylinders
car_data <- car_data %>%
mutate(Cylinders = case_when(
grepl("\\b\\d+\\s*cylinder\\b", `Engine.Information.Engine.Type`, ignore.case = TRUE) ~
as.numeric(str_extract(`Engine.Information.Engine.Type`, "\\d+")),
TRUE ~ NA_real_
))
# Verify unique cylinder values
print(unique(car_data$Cylinders))
# Filter out rows with NA in Cylinders or mpg columns
cleaned_data <- car_data %>%
filter(!is.na(Cylinders) & !is.na(`Fuel.Information.City.mpg`))
# Create the bar plot
ggplot(cleaned_data, aes(x = factor(Cylinders), y = `Fuel.Information.City.mpg`, fill = factor(Cylinders))) +
geom_bar(stat = "summary", fun = "mean", position = "dodge") +
labs(
title = "Average City MPG by Number of Cylinders",
x = "Number of Cylinders",
y = "Average City MPG",
fill = "Cylinders"
) +
theme_minimal()
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(stringr)
# Extract the number of cylinders, accounting for "cylinder" and "cylinders" (case-insensitive)
car_data <- car_data %>%
mutate(Cylinders = str_extract(`Engine.Information.Engine.Type`, "\\d+\\s*[Cc]ylinders?")) %>%
# Remove any remaining spaces and convert to numeric
mutate(Cylinders = as.numeric(str_extract(Cylinders, "\\d+")))
# Calculate average City and Highway mpg by cylinder type
mpg_data <- car_data %>%
group_by(Cylinders) %>%
summarize(
Avg_City_mpg = mean(`Fuel.Information.City.mpg`, na.rm = TRUE),
Avg_Highway_mpg = mean(`Fuel.Information.Highway.mpg`, na.rm = TRUE)
)
# Create a bar plot of average City mpg by cylinder type
ggplot(mpg_data, aes(x = as.factor(Cylinders), y = Avg_City_mpg, fill = as.factor(Cylinders))) +
geom_bar(stat = "identity") +
labs(title = "Average City MPG by Cylinder Type",
x = "Number of Cylinders",
y = "Average City MPG") +
scale_fill_discrete(name = "Cylinders") +
theme_minimal()
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(stringr)
# Load the data
car_data <- read.csv("cars.csv")
# Clean and extract the number of cylinders
car_data <- car_data %>%
mutate(
Cylinders = str_extract(
`Engine Information.Engine Type`,
"\\d+\\s*([cC]ylinder|[cC]ylinders)"
) %>%
str_extract("\\d+") %>%  # Extract the number only
as.numeric()
)
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(stringr)
# Load the data
car_data <- read.csv("cars.csv")
# Clean and extract the number of cylinders
car_data <- car_data %>%
mutate(
Cylinders = str_extract(
`Engine Information.Engine.Type`,
"\\d+\\s*([cC]ylinder|[cC]ylinders)"
) %>%
str_extract("\\d+") %>%  # Extract the number only
as.numeric()
)
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(stringr)
# Load the data
car_data <- read.csv("cars.csv")
# Clean and extract the number of cylinders
car_data <- car_data %>%
mutate(
Cylinders = str_extract(
`Engine.Information.Engine.Type`,
"\\d+\\s*([cC]ylinder|[cC]ylinders)"
) %>%
str_extract("\\d+") %>%  # Extract the number only
as.numeric()
)
# Create a new column for the average MPG (city and highway)
car_data <- car_data %>%
mutate(
AvgMPG = (`Fuel.Information.City.mpg` + `Fuel.Information.Highway.mpg`) / 2
)
# Filter out rows with missing data for cylinders or AvgMPG
car_data_clean <- car_data %>%
filter(!is.na(Cylinders) & !is.na(AvgMPG))
# Create the bar plot
ggplot(car_data_clean, aes(x = factor(Cylinders), y = AvgMPG, fill = factor(Cylinders))) +
geom_bar(stat = "summary", fun = "mean", position = position_dodge()) +
labs(
title = "Average MPG by Cylinder Count",
x = "Number of Cylinders",
y = "Average MPG"
) +
theme_minimal() +
scale_fill_brewer(palette = "Set2", name = "Cylinders")
setwd("C:/Users/user/Downloads/Projects/R/Customer Shopping Behavior")
customer_data_raw -> read.csv("C:\Users\user\Downloads\Projects\R\Customer Shopping Behavior\purchase behaviou dataset.csv")
setwd("C:/Users/user/Downloads/Projects/R/Customer Shopping Behavior")
customer_data_raw -> read.csv("C:\Users\user\Downloads\Projects\R\Customer Shopping Behavior\purchase behaviou dataset.csv")
customer_data_raw -> read.csv("C:/Users/user/Downloads/Projects/R/Customer Shopping Behavior\purchase behaviou dataset.csv")
customer_data_raw -> read.csv("/Users/user/Downloads/Projects/R/Customer Shopping Behavior\purchase behaviou dataset.csv")
customer_data_raw -> read.csv("purchase behaviou dataset.csv")
customer_data_raw <- read.csv("purchase behaviou dataset.csv")
View(customer_data_raw)
customer_data_raw <- read.csv("Customer Purchasing Behaviors.csv")
View(customer_data_raw)
customer_data_raw <- read.csv("Customer Purchasing Behaviors.csv")
summary(data)
customer_data_raw <- read.csv("Customer Purchasing Behaviors.csv")
summary(customer_data_raw)
str(customer_data_raw)
customer_data_raw <- read.csv("Customer Purchasing Behaviors.csv")
summary(customer_data_raw)
#str(customer_data_raw)
customer_data_raw <- read.csv("Customer Purchasing Behaviors.csv")
summary(customer_data_raw)
str(customer_data_raw)
install.packages("factoextra")
library(factoextra)
data <- read.csv("Customer Purchasing Behaviors.csv")
summary(data)
str(data)
fviz_nbclust(data_scaled, kmeans, method = "wss") +
labs(title = "Elbow Method")
fviz_nbclust(data, kmeans, method = "wss") +
labs(title = "Elbow Method")
library(factoextra)
data <- read.csv("Customer Purchasing Behaviors.csv")
summary(data)
str(data)
data <- na.omit(data)
data_scaled <- scale(data[, -1])
library(factoextra)
data <- read.csv("Customer Purchasing Behaviors.csv")
summary(data)
str(data)
data <- na.omit(data)
data_scaled <- scale(data[ , !(names(data) %in% c("Customer_ID"))])
library(factoextra)
data <- read.csv("Customer Purchasing Behaviors.csv")
summary(data)
str(data)
data <- na.omit(data)
data_numeric <- data[, sapply(data, is.numeric)]
data_scaled <- scale(data_numeric[, -1])
fviz_nbclust(data, kmeans, method = "wss") +
labs(title = "Elbow Method")
fviz_nbclust(data, kmeans, method = "wss") +
labs(title = "Elbow Method")
fviz_nbclust(data, kmeans, method = "wss") +
labs(title = "Elbow Method")
library(factoextra)
data <- read.csv("Customer Purchasing Behaviors.csv")
summary(data)
str(data)
data_numeric <- data[, sapply(data, is.numeric)]
data_scaled <- scale(data_numeric[, -1])
data <- na.omit(data)
library(factoextra)
data <- read.csv("Customer Purchasing Behaviors.csv")
summary(data)
str(data)
data_numeric <- data[, sapply(data, is.numeric)]
data_scaled <- scale(data_numeric[, -1])
data_scaled <- na.omit(data_scaled)
fviz_nbclust(data_scaled, kmeans, method = "wss") +
labs(title = "Elbow Method")
kmeans_result <- kmeans(data_scaled, centers = 3, nstart = 25)
set.seed(123)
kmeans_result <- kmeans(data_scaled, centers = 3, nstart = 25)
data$Cluster <- kmeans_result$cluster
aggregate(data[, -1], by = list(Cluster = data$Cluster), FUN = mean)
pca <- prcomp(data_scaled, scale. = TRUE)
fviz_cluster(kmeans_result, data = data_scaled, geom = "point", ellipse.type = "norm", stand = FALSE)
library(ggplot2)
ggplot(data, aes(x = PCA1, y = PCA2, color = as.factor(Cluster))) +
geom_point() +
labs(title = "Customer Segmentation", color = "Cluster")
set.seed(123)
kmeans_result <- kmeans(data_scaled, centers = 4, nstart = 25)
data$Cluster <- kmeans_result$cluster
aggregate(data[, -1], by = list(Cluster = data$Cluster), FUN = mean)
pca <- prcomp(data_scaled, scale. = TRUE)
fviz_cluster(kmeans_result, data = data_scaled, geom = "point", ellipse.type = "norm", stand = FALSE)
set.seed(123)
kmeans_result <- kmeans(data_scaled, centers = 3, nstart = 25)
data$Cluster <- kmeans_result$cluster
aggregate(data[, -1], by = list(Cluster = data$Cluster), FUN = mean)
pca <- prcomp(data_scaled, scale. = TRUE)
fviz_cluster(kmeans_result, data = data_scaled, geom = "point", ellipse.type = "norm", stand = FALSE)
library(factoextra)
library(ggplot2)
library(dplyr)
data <- read.csv("Customer Purchasing Behaviors.csv")
summary(data)
str(data)
data_numeric <- data[, sapply(data, is.numeric)]
data_scaled <- scale(data_numeric[, -1])
data_scaled <- na.omit(data_scaled)
fviz_nbclust(data_scaled, kmeans, method = "wss") +
labs(title = "Elbow Method")
set.seed(123)
kmeans_result <- kmeans(data_scaled, centers = 3, nstart = 25)
data$Cluster <- kmeans_result$cluster
aggregate(data[, -1], by = list(Cluster = data$Cluster), FUN = mean)
pca <- prcomp(data_scaled, scale. = TRUE)
fviz_cluster(kmeans_result, data = data_scaled, geom = "point", ellipse.type = "norm", stand = FALSE)
fviz_nbclust(data_scaled, kmeans, method = "wss") +
labs(title = "Elbow Method")
pca <- prcomp(data_scaled, scale. = TRUE)
fviz_cluster(kmeans_result, data = data_scaled, geom = "point", ellipse.type = "norm", stand = FALSE)
library(factoextra)
library(ggplot2)
library(dplyr)
git init
library(factoextra)
library(ggplot2)
library(dplyr)
data <- read.csv("Customer Purchasing Behaviors.csv")
summary(data)
str(data)
data_numeric <- data[, sapply(data, is.numeric)]
data_scaled <- scale(data_numeric[, -1])
data_scaled <- na.omit(data_scaled)
